{"version":3,"sources":["assets/thermometer.svg","assets/Spinner.gif","assets/snow.svg","assets/cloudy.svg","assets/day_rain.svg","assets/day_clear.svg","apis/api.js","components/Days/Days.js","components/Icon/Icon.js","components/Temp/Temp.js","components/WeatherBody/WeatherBody.js","components/Loader/Loader.js","components/SearchBar/SearchBar.js","components/App.js","index.js"],"names":["module","exports","axios","create","baseURL","Days","props","className","day","Icon","icon","src","Cloudy","alt","Rain","Snowing","Fragment","Thermometer","description","Temp","minTemp","maxTemp","WeatherBody","Loader","Spinner","msg","SearchBar","state","city","onSubmit","e","preventDefault","alert","searchCity","setState","onChange","target","name","value","this","type","id","placeholder","React","Component","App","a","weather","get","then","res","temp","data","city_name","isLoaded","map","el","parseInt","low_temp","max_temp","code","ReactDOM","render","document","querySelector"],"mappings":"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","file":"static/js/main.76cce014.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/thermometer.c9ff2661.svg\";","module.exports = __webpack_public_path__ + \"static/media/Spinner.0a80076b.gif\";","module.exports = __webpack_public_path__ + \"static/media/snow.5f54ba40.svg\";","module.exports = __webpack_public_path__ + \"static/media/cloudy.aa5bfc79.svg\";","module.exports = __webpack_public_path__ + \"static/media/day_rain.f3e63c91.svg\";","module.exports = __webpack_public_path__ + \"static/media/day_clear.33118352.svg\";","import axios from \"axios\";\n\nexport default axios.create({\n  baseURL: \"https://api.weatherbit.io/v2.0/forecast\",\n});\n","import React from \"react\";\nimport \"./Days.css\";\n\nconst Days = (props) => {\n  return <div className=\"Days\">{props.day}</div>;\n};\n\nexport default Days;\n","import React from \"react\";\nimport \"./Icon.css\";\nimport Cloudy from \"../../assets/cloudy.svg\";\nimport Rain from \"../../assets/day_rain.svg\";\nimport Snowing from \"../../assets/snow.svg\";\nimport Sun from \"../../assets/day_clear.svg\";\nimport Thermometer from \"../../assets/thermometer.svg\";\n\nconst Icon = (props) => {\n  switch (props.icon) {\n    case 801:\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\n      break;\n    case 802:\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\n      break;\n    case 803:\n      return <img className=\"icon\" src={Cloudy} alt={Cloudy} />;\n      break;\n    case 200:\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\n      break;\n    case 201:\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\n      break;\n    case 202:\n      return <img className=\"icon\" src={Rain} alt={Rain} />;\n      break;\n    case 600:\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\n      break;\n    case 601:\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\n      break;\n    case 602:\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\n      break;\n    case 610:\n      return <img className=\"icon\" src={Snowing} alt={Snowing} />;\n      break;\n    default:\n      return (\n        <React.Fragment>\n          <img className=\"icon\" src={Thermometer} alt={Thermometer} />;\n          <h5>{props.description}</h5>\n        </React.Fragment>\n      );\n  }\n};\n\nexport default Icon;\n","import React from \"react\";\nimport \"./Temp.css\";\n\nconst Temp = (props) => {\n  return (\n    <div className=\"Temp\">\n      <span className=\"min\">{props.minTemp} &#176;</span>\n      <span className=\"max\">{props.maxTemp} &#176;</span>\n    </div>\n  );\n};\n\nexport default Temp;\n","import React from \"react\";\nimport \"./WeatherBody.css\";\nimport Days from \"../Days/Days\";\nimport Icon from \"../Icon/Icon\";\nimport Temp from \"../Temp/Temp\";\n\nconst WeatherBody = (props) => {\n  return (\n    <div className=\"WeatherBody card\">\n      <Days day={props.day} />\n      <Icon icon={props.icon} />\n      <Temp\n        minTemp={props.minTemp}\n        maxTemp={props.maxTemp}\n        description={props.description}\n      />\n    </div>\n  );\n};\n\nexport default WeatherBody;\n","import React from \"react\";\nimport \"./Loader.css\";\nimport Spinner from \"../../assets/Spinner.gif\";\n\nconst Loader = (props) => {\n  return (\n    <div className=\"Loader\">\n      <img src={Spinner} alt={Spinner} />\n      <h6 className=\"text-center-mt-3\">{props.msg}</h6>\n    </div>\n  );\n};\n\nexport default Loader;\n","import React from \"react\";\nimport \"./SearchBar.css\";\n\nclass SearchBar extends React.Component {\n  state = {\n    city: \"\",\n  };\n\n  onSubmit = (e) => {\n    e.preventDefault();\n    if (this.state.city === \"\") {\n      alert(\"City can not be empty\");\n    } else {\n      this.props.searchCity(this.state.city);\n    }\n\n    this.setState({ city: \"\" });\n  };\n\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\n\n  render() {\n    return (\n      <div className=\"SearchBar\">\n        <div className=\"SearchBarChilds\">\n          <h5 className=\"text-white\">Search weather on your city</h5>\n\n          <form onSubmit={this.onSubmit} className=\"formSearchCity\">\n            <input\n              type=\"text\"\n              name=\"city\"\n              id=\"inputSearchCity\"\n              onChange={this.onChange}\n              placeholder=\"Search City...\"\n            />\n            <button type=\"submit\" className=\"btn btn-outline-info text-white\">\n              Search\n            </button>\n          </form>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchBar;\n","import React from \"react\";\nimport \"./App.css\";\nimport weather from \"../apis/api\";\nimport WeatherBody from \"./WeatherBody/WeatherBody\";\nimport Loader from \"./Loader/Loader\";\nimport SearchBar from \"./SearchBar/SearchBar\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      temp: [],\n      city: null,\n      isLoaded: false,\n    };\n  }\n\n  componentDidMount() {\n    this.setState({ isLoaded: true });\n  }\n\n  searchCity = async (city) => {\n    await weather\n      .get(`daily?city=${city}&key=3883f69ab25f46dc92cdf2b5d66a1517`)\n      .then((res) => {\n        const temp = res.data.data;\n        const city = res.data.city_name;\n\n        this.setState({\n          temp,\n          city,\n        });\n      });\n  };\n\n  render() {\n    //Methods\n\n    const minTemp = this.state.temp.map((el) => {\n      return parseInt(el.low_temp);\n    });\n\n    const maxTemp = this.state.temp.map((el) => {\n      return parseInt(el.max_temp);\n    });\n\n    const icon = this.state.temp.map((el) => {\n      return el.weather.code;\n    });\n\n    const description = this.state.temp.map((el) => {\n      return el.weather.description;\n    });\n\n    //Loader\n    if (!this.state.isLoaded) {\n      return <Loader msg={\"Loading...\"} />;\n    }\n    return (\n      <div className=\"App\">\n        <React.Fragment>\n          <SearchBar city={this.state.city} searchCity={this.searchCity} />\n        </React.Fragment>\n        <div className=\"weatherContainer pt-3 pb-3\">\n          <h5 className=\"cityName\">{this.state.city}</h5>\n          <WeatherBody\n            day={\"Mon\"}\n            icon={icon[0]}\n            minTemp={minTemp[0]}\n            maxTemp={maxTemp[0]}\n            description={description[0]}\n          />\n          <WeatherBody\n            day={\"Tue\"}\n            icon={icon[1]}\n            minTemp={minTemp[1]}\n            maxTemp={maxTemp[1]}\n            description={description[1]}\n          />\n          <WeatherBody\n            day={\"Wed\"}\n            icon={icon[2]}\n            minTemp={minTemp[2]}\n            maxTemp={maxTemp[2]}\n            description={description[2]}\n          />\n          <WeatherBody\n            day={\"Thu\"}\n            icon={icon[3]}\n            minTemp={minTemp[3]}\n            maxTemp={maxTemp[3]}\n            description={description[3]}\n          />\n          <WeatherBody\n            day={\"Fri\"}\n            icon={icon[4]}\n            minTemp={minTemp[4]}\n            maxTemp={maxTemp[4]}\n            description={description[4]}\n          />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App.js';\n\nReactDOM.render(<App/>, document.querySelector('#root'));\n"],"sourceRoot":""}